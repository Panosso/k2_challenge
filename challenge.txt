******TESTE***

Você deverá desenvolver uma api (python) que interaja com a situação descrita na explicação, armazenando esses dados em um banco e disponibilizando novamente em um endpoint.



Utilize os dados de login e senha mencionados na seção de "usuários fictícios" para autenticação.



Por favor, disponibilize o código em um repositório no GitHub, juntamente com instruções claras sobre como configurar, executar e testar o projeto. A estrutura do código, tempo de codificação, segurança e o nível de complexidade implementados serão fatores importantes na avaliação final.



Explicação:

Autenticação: A rota /token gera um token JWT para o usuário se ele fornecer as credenciais corretas.

Rotas Protegidas: Existem duas rotas protegidas:

/user: Acessível apenas para usuários com o papel user.

/admin: Acessível apenas para usuários com o papel admin.

Segurança JWT: O token é gerado na rota /token e utilizado nas demais rotas com o header Authorization: Bearer <token>.



# Usuários fictícios

fake_users_db = {

"user": {"username": "user", "role": "user", "password": "L0XuwPOdS5U"},

"admin": {"username": "admin", "role": "admin", "password": "JKSipm0YH"},

}



Serviço FAKE:

https://api-onecloud.multicloud.tivit.com/fake/health

https://api-onecloud.multicloud.tivit.com/fake/admin

https://api-onecloud.multicloud.tivit.com/fake/user

https://api-onecloud.multicloud.tivit.com/fake/token